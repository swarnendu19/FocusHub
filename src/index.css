@import "tailwindcss";

@layer base {
  :root {
    /* Colors from your index.css */
    --background: 210 40% 98%;
    --foreground: 222 47% 11%;
    --card: 0 0% 100%;
    --card-foreground: 222 47% 11%;
    --popover: 0 0% 100%;
    --popover-foreground: 222 47% 11%;
    --primary: 221 83% 53%;
    --primary-foreground: 210 40% 98%;
    --secondary: 214 32% 91%;
    --secondary-foreground: 222 47% 11%;
    --muted: 214 32% 91%;
    --muted-foreground: 215 16% 47%;
    --accent: 214 32% 91%;
    --accent-foreground: 222 47% 11%;
    --destructive: 0 85% 60%;
    --destructive-foreground: 210 40% 98%;
    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: 221 83% 53%;
    --radius: 0.5rem;

    /* Dark mode colors (optional, for class-based dark mode) */
    [data-theme="dark"] {
      --background: 222 47% 11%;
      --foreground: 210 40% 98%;
      --card: 222 47% 11%;
      --card-foreground: 210 40% 98%;
      --popover: 222 47% 11%;
      --popover-foreground: 210 40% 98%;
      --primary: 221 83% 53%;
      --primary-foreground: 210 40% 98%;
      --secondary: 215 28% 17%;
      --secondary-foreground: 210 40% 98%;
      --muted: 215 28% 17%;
      --muted-foreground: 215 16% 47%;
      --accent: 215 28% 17%;
      --accent-foreground: 210 40% 98%;
      --destructive: 0 85% 60%;
      --destructive-foreground: 210 40% 98%;
      --border: 215 28% 17%;
      --input: 215 28% 17%;
      --ring: 221 83% 53%;
    }
  }

  /* Apply border styles globally */
  * {
    border-color: hsl(var(--border));
  }

  /* Base body styles */
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    font-family: sans-serif;
  }
}

@layer utilities {
  /* Container styles */
  .container {
    margin-left: auto;
    margin-right: auto;
    padding-left: 2rem;
    padding-right: 2rem;
    max-width: 1400px; /* 2xl screen size */
  }

  /* Border radius utilities */
  .rounded-lg {
    border-radius: var(--radius);
  }
  .rounded-md {
    border-radius: calc(var(--radius) - 2px);
  }
  .rounded-sm {
    border-radius: calc(var(--radius) - 4px);
  }

  /* Color utilities */
  .bg-background {
    background-color: hsl(var(--background));
  }
  .text-foreground {
    color: hsl(var(--foreground));
  }
  .border-border {
    border-color: hsl(var(--border));
  }
  .bg-card {
    background-color: hsl(var(--card));
  }
  .text-card-foreground {
    color: hsl(var(--card-foreground));
  }
  .bg-popover {
    background-color: hsl(var(--popover));
  }
  .text-popover-foreground {
    color: hsl(var(--popover-foreground));
  }
  .bg-primary {
    background-color: hsl(var(--primary));
  }
  .text-primary-foreground {
    color: hsl(var(--primary-foreground));
  }
  .bg-secondary {
    background-color: hsl(var(--secondary));
  }
  .text-secondary-foreground {
    color: hsl(var(--secondary-foreground));
  }
  .bg-muted {
    background-color: hsl(var(--muted));
  }
  .text-muted-foreground {
    color: hsl(var(--muted-foreground));
  }
  .bg-accent {
    background-color: hsl(var(--accent));
  }
  .text-accent-foreground {
    color: hsl(var(--accent-foreground));
  }
  .bg-destructive {
    background-color: hsl(var(--destructive));
  }
  .text-destructive-foreground {
    color: hsl(var(--destructive-foreground));
  }
  .ring-ring {
    --tw-ring-color: hsl(var(--ring));
  }
  .bg-input {
    background-color: hsl(var(--input));
  }
}

@layer components {
  /* Keyframes for animations */
  @keyframes accordion-down {
    from { height: 0; }
    to { height: var(--radix-accordion-content-height); }
  }
  @keyframes accordion-up {
    from { height: var(--radix-accordion-content-height); }
    to { height: 0; }
  }

  /* Animation utilities */
  .animate-accordion-down {
    animation: accordion-down 0.2s ease-out;
  }
  .animate-accordion-up {
    animation: accordion-up 0.2s ease-out;
  }
}